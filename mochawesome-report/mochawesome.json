{
  "stats": {
    "suites": 12,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-01T04:42:03.840Z",
    "end": "2023-09-01T04:42:07.655Z",
    "duration": 3815,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bb12639f-9376-458c-b816-88ed9d45a276",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93314a6e-e9b0-4a80-8842-32b599a44219",
          "title": "Post New User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Post New User Response Status Equal to 200",
              "timedOut": false,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(200);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "ca7fa99c-7d8d-4413-b60d-be28b290040c",
              "parentUUID": "93314a6e-e9b0-4a80-8842-32b599a44219",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca7fa99c-7d8d-4413-b60d-be28b290040c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 466,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b1eaeae1-5838-40bb-ab32-aa38370bb46e",
          "title": "Post Duplicate User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Duplicate User Response Status Equal to 422",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "bcb50c65-daf7-4c5c-bc34-49d4c8f14938",
              "parentUUID": "b1eaeae1-5838-40bb-ab32-aa38370bb46e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcb50c65-daf7-4c5c-bc34-49d4c8f14938"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 318,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f808b804-0a04-4dcb-9f67-5c1904f4b2ac",
          "title": "Post Email Invalid",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Email Invalid Response Status Equal to 422",
              "timedOut": false,
              "duration": 310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "dcdac46c-de89-4fb6-ace7-409cca18b941",
              "parentUUID": "f808b804-0a04-4dcb-9f67-5c1904f4b2ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcdac46c-de89-4fb6-ace7-409cca18b941"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 310,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f021812d-2a7f-4d70-9b11-2c15ae24cfbf",
          "title": "Post Status Invalid",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Status Invalid Response Status Equal to 422",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"ok\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "752d7515-e45d-47be-b485-0d88931e5a69",
              "parentUUID": "f021812d-2a7f-4d70-9b11-2c15ae24cfbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "752d7515-e45d-47be-b485-0d88931e5a69"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 289,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a526ecde-8a37-4dc5-9649-9bb6d98a34c4",
          "title": "Post Without Field Name",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Name Response Status Equal to 422",
              "timedOut": false,
              "duration": 315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "d2254c7b-7fdb-429c-a924-da3f0fdca815",
              "parentUUID": "a526ecde-8a37-4dc5-9649-9bb6d98a34c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2254c7b-7fdb-429c-a924-da3f0fdca815"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 315,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ce4a76ea-c95e-48b0-900c-d5557568cbe5",
          "title": "Post Without Field Email",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Email Response Status Equal to 422",
              "timedOut": false,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "6c4d7f2e-5bd2-4097-8b6d-4432ba42e790",
              "parentUUID": "ce4a76ea-c95e-48b0-900c-d5557568cbe5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c4d7f2e-5bd2-4097-8b6d-4432ba42e790"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 301,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c57b75b2-347f-4861-9bc7-86a775724c15",
          "title": "Post Without Field Gender",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Gender Response Status Equal to 422",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "08830cbf-1fbf-4f8b-9afe-4d37ef4b5838",
              "parentUUID": "c57b75b2-347f-4861-9bc7-86a775724c15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08830cbf-1fbf-4f8b-9afe-4d37ef4b5838"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 289,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8f9c0b94-4271-42d7-b38e-657ed5fc5bac",
          "title": "Post Without Field Status",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Status Response Status Equal to 422",
              "timedOut": false,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "55dff653-fbc7-4dc9-9f46-784fa48de375",
              "parentUUID": "8f9c0b94-4271-42d7-b38e-657ed5fc5bac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55dff653-fbc7-4dc9-9f46-784fa48de375"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 283,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6b503938-e6e4-4e9c-90ac-9539b950baa4",
          "title": "Get All User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get All User Response Status Equal to 200",
              "timedOut": false,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users?access-token=${authToken}`)\n  expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "ef462594-bf09-47a9-84c0-d660ba637b9e",
              "parentUUID": "6b503938-e6e4-4e9c-90ac-9539b950baa4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef462594-bf09-47a9-84c0-d660ba637b9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 296,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "957a7060-8afa-44f1-a23d-f97dde54def4",
          "title": "Get Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users/${userId}?access-token=${authToken}`);\n  expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "845a7451-f752-4bd2-a931-3693801e0206",
              "parentUUID": "957a7060-8afa-44f1-a23d-f97dde54def4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "845a7451-f752-4bd2-a931-3693801e0206"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 316,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3eb21c10-6e53-49f5-818a-1dd527fc9de2",
          "title": "Put Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Put Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .put(`/users/${userId}?access-token=${authToken}`)\n  .send({\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"active\"\n});\n  expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "16f4f10e-d4e6-428b-a8ac-23e34af0e359",
              "parentUUID": "3eb21c10-6e53-49f5-818a-1dd527fc9de2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16f4f10e-d4e6-428b-a8ac-23e34af0e359"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2b8be3a3-0e84-4f97-8cf4-8164e04f2567",
          "title": "Delete Selected User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Delete Selected User Response Status Equal to 200",
              "timedOut": false,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n.delete(`/users/${userId}?access-token=${authToken}`)\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "bea6c6d0-78bb-4e54-a24e-3b273e22844e",
              "parentUUID": "2b8be3a3-0e84-4f97-8cf4-8164e04f2567",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bea6c6d0-78bb-4e54-a24e-3b273e22844e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 276,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}