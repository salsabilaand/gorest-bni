{
  "stats": {
    "suites": 7,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-01T03:18:59.713Z",
    "end": "2023-09-01T03:19:02.534Z",
    "duration": 2821,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d46c972b-3a37-43de-ae9c-acee2ef59444",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12a8212f-f02d-493c-b207-b2cadf9d7ef1",
          "title": "Post New User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Post New User Response Status Equal to 200",
              "timedOut": false,
              "duration": 570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(200);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "3f0df69f-a4ec-48c4-aaae-3a5f84ef585d",
              "parentUUID": "12a8212f-f02d-493c-b207-b2cadf9d7ef1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f0df69f-a4ec-48c4-aaae-3a5f84ef585d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 570,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "406edc48-fbad-4b98-9ba3-64c29a847fa0",
          "title": "Post Duplicate User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Duplicate User Response Status Equal to 422",
              "timedOut": false,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "c0cb85f7-f7da-4f56-b244-4601fe17cfd0",
              "parentUUID": "406edc48-fbad-4b98-9ba3-64c29a847fa0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0cb85f7-f7da-4f56-b244-4601fe17cfd0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f78b7de7-8636-4a2f-9c29-ee78f144fdb4",
          "title": "Post Without Field Name",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Name Response Status Equal to 422",
              "timedOut": false,
              "duration": 396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "227cd30f-b309-4e28-8ca4-932649ca4b5b",
              "parentUUID": "f78b7de7-8636-4a2f-9c29-ee78f144fdb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "227cd30f-b309-4e28-8ca4-932649ca4b5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "139a6999-36d7-4681-8b8e-383ed3eacc93",
          "title": "Get All User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get All User Response Status Equal to 200",
              "timedOut": false,
              "duration": 399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "c53a1cf6-21e0-4649-bfc7-b4e12a860243",
              "parentUUID": "139a6999-36d7-4681-8b8e-383ed3eacc93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c53a1cf6-21e0-4649-bfc7-b4e12a860243"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 399,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f57129f5-acfd-48b2-a0ea-29854a06ce59",
          "title": "Get Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users/${userId}?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "b9d42545-b416-453a-9ac0-62a07c0d3f34",
              "parentUUID": "f57129f5-acfd-48b2-a0ea-29854a06ce59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9d42545-b416-453a-9ac0-62a07c0d3f34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 318,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "80b88465-1e07-4cd4-abba-e3769cd516d7",
          "title": "Put Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Put Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .put(`/users/${userId}?access-token=${authToken}`)\n  .send({\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"active\"\n});\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "058990f7-9437-4845-94df-80798e815716",
              "parentUUID": "80b88465-1e07-4cd4-abba-e3769cd516d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "058990f7-9437-4845-94df-80798e815716"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 316,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a11e23c8-df26-4db2-8e71-3321bc21066d",
          "title": "Delete Selected User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Delete Selected User Response Status Equal to 200",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n.delete(`/users/${userId}?access-token=${authToken}`)\nexpect(response.status).to.equal(200)",
              "err": {},
              "uuid": "2b8e26ce-32de-4cd8-89c8-870ec5234116",
              "parentUUID": "a11e23c8-df26-4db2-8e71-3321bc21066d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b8e26ce-32de-4cd8-89c8-870ec5234116"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}