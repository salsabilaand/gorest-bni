{
  "stats": {
    "suites": 11,
    "tests": 11,
    "passes": 7,
    "pending": 0,
    "failures": 4,
    "start": "2023-09-01T04:19:01.302Z",
    "end": "2023-09-01T04:19:47.816Z",
    "duration": 46514,
    "testsRegistered": 11,
    "passPercent": 63.63636363636363,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f857ea65-fe39-490f-8189-ad905fa15188",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1342c255-2eab-480e-8c8c-b4f7fdcdfbe0",
          "title": "Post New User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Post New User Response Status Equal to 200",
              "timedOut": false,
              "duration": 591,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(200);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "a68b469a-b338-47cc-901d-2c317de585b2",
              "parentUUID": "1342c255-2eab-480e-8c8c-b4f7fdcdfbe0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a68b469a-b338-47cc-901d-2c317de585b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 591,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1574c816-eaba-4561-92bb-6fa8b516707d",
          "title": "Post New User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Post New User Response Status Equal to 200",
              "timedOut": true,
              "duration": 10012,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.statusCode).to.equal(200);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "550b7bd7-ee6e-49af-addb-5e0aabdebcde",
              "parentUUID": "1574c816-eaba-4561-92bb-6fa8b516707d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "550b7bd7-ee6e-49af-addb-5e0aabdebcde"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ab88cd49-facc-4c58-b897-3e08d625c548",
          "title": "Post Duplicate User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Duplicate User Response Status Equal to 422",
              "timedOut": true,
              "duration": 10003,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "e8a4fdc5-8ae4-4461-978d-4ad1cf71843e",
              "parentUUID": "ab88cd49-facc-4c58-b897-3e08d625c548",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e8a4fdc5-8ae4-4461-978d-4ad1cf71843e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10003,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0a710320-332b-43e6-8d09-c2b2749afe61",
          "title": "Post Without Field Name",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Name Response Status Equal to 422",
              "timedOut": false,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "712d8122-2fb9-45f9-a3f1-d924b194368e",
              "parentUUID": "0a710320-332b-43e6-8d09-c2b2749afe61",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "712d8122-2fb9-45f9-a3f1-d924b194368e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 573,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "83b5ff07-6a7f-473b-89a2-53a340897f99",
          "title": "Post Without Field Email",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Email Response Status Equal to 422",
              "timedOut": false,
              "duration": 2249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "007db7e4-3cc0-43e3-bf41-5ca9d4a3defd",
              "parentUUID": "83b5ff07-6a7f-473b-89a2-53a340897f99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "007db7e4-3cc0-43e3-bf41-5ca9d4a3defd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ac7301cd-d5a8-4153-a8c4-e90df9010bf7",
          "title": "Post Without Field Gender",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Gender Response Status Equal to 422",
              "timedOut": true,
              "duration": 10002,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "8442de4e-7157-47f4-bfea-06a602294134",
              "parentUUID": "ac7301cd-d5a8-4153-a8c4-e90df9010bf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8442de4e-7157-47f4-bfea-06a602294134"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10002,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4cec292d-d972-4552-9648-3ba7dcfa6ac6",
          "title": "Post Without Field Status",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Status Response Status Equal to 422",
              "timedOut": false,
              "duration": 811,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "4f07ec78-bbb0-4eef-a045-c999849d45b8",
              "parentUUID": "4cec292d-d972-4552-9648-3ba7dcfa6ac6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f07ec78-bbb0-4eef-a045-c999849d45b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 811,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "efb3f106-4841-4b94-8d09-b1c96451abe9",
          "title": "Get All User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get All User Response Status Equal to 200",
              "timedOut": false,
              "duration": 1056,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "6f9be576-9c46-4f4e-a9bc-33c6eb22f400",
              "parentUUID": "efb3f106-4841-4b94-8d09-b1c96451abe9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f9be576-9c46-4f4e-a9bc-33c6eb22f400"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1056,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "23b9379a-4320-41e2-a74b-271df168412e",
          "title": "Get Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users/${userId}?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "c498bb8f-d7ce-4aae-a57f-c4a3cccc1efe",
              "parentUUID": "23b9379a-4320-41e2-a74b-271df168412e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c498bb8f-d7ce-4aae-a57f-c4a3cccc1efe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 624,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1e86b97d-c86f-4391-a360-5f6fe7b9a224",
          "title": "Put Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Put Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .put(`/users/${userId}?access-token=${authToken}`)\n  .send({\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"active\"\n})\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "a54c1499-bc7f-4542-b824-817ce1fd7d20",
              "parentUUID": "1e86b97d-c86f-4391-a360-5f6fe7b9a224",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a54c1499-bc7f-4542-b824-817ce1fd7d20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 541,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "23d60131-d3c7-4bbd-884c-2093fc0fba51",
          "title": "Delete Selected User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Delete Selected User Response Status Equal to 200",
              "timedOut": true,
              "duration": 10001,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n.delete(`/users/${userId}?access-token=${authToken}`)\nexpect(response.status).to.equal(200)",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\E\\gorest-bni\\test\\api\\user.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "cf27c8f7-5be9-4c6a-8315-ec3c65606a18",
              "parentUUID": "23d60131-d3c7-4bbd-884c-2093fc0fba51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cf27c8f7-5be9-4c6a-8315-ec3c65606a18"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10001,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}