{
  "stats": {
    "suites": 10,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-01T03:25:47.221Z",
    "end": "2023-09-01T03:25:51.882Z",
    "duration": 4661,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a79ad787-0fb9-4139-8bfe-0d866e9d226f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7b746b4-6764-4476-8a6a-70786dea127b",
          "title": "Post New User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Post New User Response Status Equal to 200",
              "timedOut": false,
              "duration": 650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(200);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "74f4faca-89eb-4f46-b96e-b12dbcf527a1",
              "parentUUID": "f7b746b4-6764-4476-8a6a-70786dea127b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74f4faca-89eb-4f46-b96e-b12dbcf527a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 650,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "16bb4658-f0b8-46e9-9b89-1d3970664f4a",
          "title": "Post Duplicate User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Duplicate User Response Status Equal to 422",
              "timedOut": false,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "4c8f3614-180a-4216-a17f-50abf379046c",
              "parentUUID": "16bb4658-f0b8-46e9-9b89-1d3970664f4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c8f3614-180a-4216-a17f-50abf379046c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 338,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "92bc0b94-4465-42d6-9fec-2646bf3e1aa5",
          "title": "Post Without Field Name",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Name Response Status Equal to 422",
              "timedOut": false,
              "duration": 543,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "06757d9b-7198-4d72-b216-38b0a77bf345",
              "parentUUID": "92bc0b94-4465-42d6-9fec-2646bf3e1aa5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06757d9b-7198-4d72-b216-38b0a77bf345"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 543,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "057b5435-ed91-4823-84e9-1b72848dcfa1",
          "title": "Post Without Field Email",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Email Response Status Equal to 422",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "c50fabc2-d8d0-491f-92c0-e98aa3cb50eb",
              "parentUUID": "057b5435-ed91-4823-84e9-1b72848dcfa1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c50fabc2-d8d0-491f-92c0-e98aa3cb50eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 287,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "85ac7af8-81cf-4473-9572-934f6d108fb7",
          "title": "Post Without Field Gender",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Gender Response Status Equal to 422",
              "timedOut": false,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "d8e30a24-4494-45dc-b86e-2b3be202235e",
              "parentUUID": "85ac7af8-81cf-4473-9572-934f6d108fb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8e30a24-4494-45dc-b86e-2b3be202235e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "de1af8c2-11a5-4d9e-b6d4-c4ffcc8cacf7",
          "title": "Post Without Field Status",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Status Response Status Equal to 422",
              "timedOut": false,
              "duration": 1007,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "bbd13617-fc21-4595-af14-f938516037f5",
              "parentUUID": "de1af8c2-11a5-4d9e-b6d4-c4ffcc8cacf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbd13617-fc21-4595-af14-f938516037f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "28ceac01-ba4f-4327-81b8-89c4b1aaf365",
          "title": "Get All User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get All User Response Status Equal to 200",
              "timedOut": false,
              "duration": 547,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "c84bd01a-8974-40a2-84bf-777b742bd316",
              "parentUUID": "28ceac01-ba4f-4327-81b8-89c4b1aaf365",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c84bd01a-8974-40a2-84bf-777b742bd316"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 547,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "aafbfbe3-5224-4da6-a83e-8c9974859e57",
          "title": "Get Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users/${userId}?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "8bfcd685-d2a1-4607-879f-b8698c2190af",
              "parentUUID": "aafbfbe3-5224-4da6-a83e-8c9974859e57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8bfcd685-d2a1-4607-879f-b8698c2190af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 314,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bb540d00-bebf-4b8d-a6da-af6c33a18c6d",
          "title": "Put Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Put Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .put(`/users/${userId}?access-token=${authToken}`)\n  .send({\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"active\"\n});\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "e01b16b9-9421-4cde-9a64-c61a521d3179",
              "parentUUID": "bb540d00-bebf-4b8d-a6da-af6c33a18c6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e01b16b9-9421-4cde-9a64-c61a521d3179"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 309,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dc2e162b-766a-4cfa-aa9e-d48888540b2d",
          "title": "Delete Selected User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Delete Selected User Response Status Equal to 200",
              "timedOut": false,
              "duration": 398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n.delete(`/users/${userId}?access-token=${authToken}`)\nexpect(response.status).to.equal(200)",
              "err": {},
              "uuid": "2b9c95ee-1938-41ee-bc91-0a3c0bfb69c4",
              "parentUUID": "dc2e162b-766a-4cfa-aa9e-d48888540b2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b9c95ee-1938-41ee-bc91-0a3c0bfb69c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 398,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}