{
  "stats": {
    "suites": 10,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-01T03:42:55.160Z",
    "end": "2023-09-01T03:42:58.313Z",
    "duration": 3153,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ed8617d6-34ae-485e-aff7-c98fc4db0c46",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c4b29a3-d697-423c-b0d6-4b5aeff238b0",
          "title": "Post New User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Post New User Response Status Equal to 200",
              "timedOut": false,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(200);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "08b037be-83aa-4458-9165-1c9d96d43a9f",
              "parentUUID": "4c4b29a3-d697-423c-b0d6-4b5aeff238b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08b037be-83aa-4458-9165-1c9d96d43a9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 476,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "63f87b60-29f2-49ef-a39b-ff55a8ab12bd",
          "title": "Post Duplicate User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Duplicate User Response Status Equal to 422",
              "timedOut": false,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "ad72d37e-eff9-447d-a693-372f5997056e",
              "parentUUID": "63f87b60-29f2-49ef-a39b-ff55a8ab12bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad72d37e-eff9-447d-a693-372f5997056e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 277,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd06366e-4c5a-417e-ad69-b187a2c731dc",
          "title": "Post Without Field Name",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Name Response Status Equal to 422",
              "timedOut": false,
              "duration": 333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "b08fcd44-f5ed-446a-a5d5-5061bf6db81d",
              "parentUUID": "cd06366e-4c5a-417e-ad69-b187a2c731dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b08fcd44-f5ed-446a-a5d5-5061bf6db81d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4c42639a-205b-4269-aeb7-f1eff3aac30a",
          "title": "Post Without Field Email",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Email Response Status Equal to 422",
              "timedOut": false,
              "duration": 322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "b865a16f-9f5a-42ca-bcea-2d9bd35dc7c5",
              "parentUUID": "4c42639a-205b-4269-aeb7-f1eff3aac30a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b865a16f-9f5a-42ca-bcea-2d9bd35dc7c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0e8dda2e-9412-478b-9cf3-84bfbc348d81",
          "title": "Post Without Field Gender",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Gender Response Status Equal to 422",
              "timedOut": false,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"status\": \"inactive\"\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "cff9f32e-ffee-4647-b277-adf01e65672a",
              "parentUUID": "0e8dda2e-9412-478b-9cf3-84bfbc348d81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cff9f32e-ffee-4647-b277-adf01e65672a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fa9704ff-9f7e-4b2b-b69c-1244cbc6bc62",
          "title": "Post Without Field Status",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 422",
              "fullTitle": "Post Without Field Status Response Status Equal to 422",
              "timedOut": false,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila.a@jast-herman.example\",\n    \"gender\": \"female\",\n};\ntry {\n    const response = await request(baseUrl)\n      .post(`/users?access-token=${authToken}`)\n      .send(newUser);\n    expect(response.status).to.equal(422);\n  } catch (error) {\n    console.error('Error:', error);\n}",
              "err": {},
              "uuid": "8e99731a-9e3f-4af0-ae51-23ff2a35a0bf",
              "parentUUID": "fa9704ff-9f7e-4b2b-b69c-1244cbc6bc62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e99731a-9e3f-4af0-ae51-23ff2a35a0bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 416,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d3a1f79a-4fa0-4166-bd41-ad4eed97e42e",
          "title": "Get All User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get All User Response Status Equal to 200",
              "timedOut": false,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "6632cac4-20bb-4a48-8706-7ed15ab608c1",
              "parentUUID": "d3a1f79a-4fa0-4166-bd41-ad4eed97e42e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6632cac4-20bb-4a48-8706-7ed15ab608c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 448,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "63e3b5f0-56b5-4447-b43e-fd492e9599b6",
          "title": "Get Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Get Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .get(`/users/${userId}?access-token=${authToken}`)\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "0cfdbb6e-fb18-410f-8236-0dfa398e3da6",
              "parentUUID": "63e3b5f0-56b5-4447-b43e-fd492e9599b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cfdbb6e-fb18-410f-8236-0dfa398e3da6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 218,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a174bada-2e89-4d02-8aa2-806fa181abb0",
          "title": "Put Selected User Details",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Put Selected User Details Response Status Equal to 200",
              "timedOut": false,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n  .put(`/users/${userId}?access-token=${authToken}`)\n  .send({\n    \"name\": \"Salsabila\",\n    \"email\": \"salsabila@jast-herman.example\",\n    \"gender\": \"female\",\n    \"status\": \"active\"\n});\n  expect(response.status).to.equal(200)",
              "err": {},
              "uuid": "394f6163-4385-4342-be88-2e792290d28d",
              "parentUUID": "a174bada-2e89-4d02-8aa2-806fa181abb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "394f6163-4385-4342-be88-2e792290d28d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 196,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f3b4c89a-9a01-4da8-b00f-0efe9fd01605",
          "title": "Delete Selected User",
          "fullFile": "E:\\E\\gorest-bni\\test\\api\\user.js",
          "file": "\\test\\api\\user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Response Status Equal to 200",
              "fullTitle": "Delete Selected User Response Status Equal to 200",
              "timedOut": false,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl)\n.delete(`/users/${userId}?access-token=${authToken}`)\nexpect(response.status).to.equal(200)",
              "err": {},
              "uuid": "08d6adf7-5ee9-430c-a4c3-e327fdb624be",
              "parentUUID": "f3b4c89a-9a01-4da8-b00f-0efe9fd01605",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08d6adf7-5ee9-430c-a4c3-e327fdb624be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}